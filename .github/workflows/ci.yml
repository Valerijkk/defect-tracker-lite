name: defect-ci
on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run pytest
        working-directory: backend
        env:
          PYTHONPATH: ${{ github.workspace }}/backend
        run: pytest -q

  backend-smoke:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install deps
        working-directory: backend
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Start API and ping /api/health
        working-directory: backend
        run: |
          python app.py & echo $! > server.pid
          for i in {1..30}; do
            sleep 1
            if curl -fsS http://127.0.0.1:5000/api/health >/dev/null; then
              echo "Health OK"; break
            fi
            if [ "$i" -eq 30 ]; then echo "::error ::API did not start"; exit 1; fi
          done

      - name: Stop API
        if: always()
        working-directory: backend
        run: |
          kill $(cat server.pid) 2>/dev/null || true

  frontend-smoke:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install deps
        working-directory: frontend
        run: npm ci || npm i

      # Запускаем dev-server, ждём 200 с корня и гасим
      - name: Start dev server and ping /
        working-directory: frontend
        env:
          BROWSER: none
          CI: "true"
        run: |
          npm start & echo $! > web.pid
          for i in {1..60}; do
            sleep 2
            if curl -fsS http://127.0.0.1:3000 >/dev/null; then
              echo "Frontend started"; break
            fi
            if [ "$i" -eq 60 ]; then echo "::error ::Frontend did not start"; exit 1; fi
          done

      - name: Stop dev server
        if: always()
        working-directory: frontend
        run: |
          kill $(cat web.pid) 2>/dev/null || true
